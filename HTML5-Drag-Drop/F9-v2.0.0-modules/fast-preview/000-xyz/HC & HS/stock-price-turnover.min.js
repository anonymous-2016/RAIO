!function (e) {
    function t(n) {
        if (o[n]) 
            return o[n].exports;
        var a = o[n] = {
            i: n,
            l: !1,
            exports: {}
        };
        return e[n].call(a.exports, a, a.exports, t),
        a.l = !0,
        a.exports
    }
    var o = {};
    t.m = e,
    t.c = o,
    t.d = function (e, o, n) {
        t.o(e, o) || Object.defineProperty(e, o, {
            configurable: !1,
            enumerable: !0,
            get: n
        })
    },
    t.n = function (e) {
        var o = e && e.__esModule
            ? function () {
                return e.default
            }
            : function () {
                return e
            };
        return t.d(o, "a", o),
        o
    },
    t.o = function (e, t) {
        return Object
            .prototype
            .hasOwnProperty
            .call(e, t)
    },
    t.p = "",
    t(t.s = 17)
}({
    17: function (e, t, o) {
        "use strict";
        var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator
                ? function (e) {
                    return typeof e
                }
                : function (e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype
                        ? "symbol"
                        : typeof e
                },
            a = a || {};
        a.Modules = a.Modules || {},
        a.Modules.SPTurnover = a.Modules.SPTurnover || function () {
            var e = arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : "",
                t = arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : "default_dom_uid",
                o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                r = {};
            return fetch(e).then(function (e) {
                return e.json()
            })
                .then(function (e) {
                    var l = [];
                    if (o && console.log("json = \n", e), "object" === (void 0 === e
                        ? "undefined"
                        : n(e)) && Object.keys(e).length > 0) {
                        var s = e.zd,
                            i = e.zdf,
                            d = e.jnzdf,
                            u = e.zdf3,
                            c = e.zdf12,
                            p = e.beta,
                            g = e.gj;
                        o && (console.log("up_drop = \n", s), console.log("up_drop_amplitude = \n", i), console.log("stcok_price = \n", g), console.log("since_amplitude = \n", d), console.log("year_amplitude = \n", c), console.log("up_drop = \n", s), console.log("year_beta = \n", p));
                        var h = [
                                g, s, i
                            ],
                            f = [d, u, c, p];
                        o && (console.log("big_values = \n", h), console.log("small_values = \n", f));
                        var v = function () {
                            return (arguments.length > 0 && void 0 !== arguments[0]
                                ? arguments[0]
                                : "").includes("-")
                        };
                        !function () {
                            var e = arguments.length > 0 && void 0 !== arguments[0]
                                    ? arguments[0]
                                    : [],
                                t = arguments.length > 1 && void 0 !== arguments[1]
                                    ? arguments[1]
                                    : [],
                                n = document.querySelectorAll('[data-title-span="big-span"]'),
                                a = document.querySelectorAll('[data-title-span="small-span"]'),
                                r = document.querySelector('[data-status="big-span"]');
                            o && (console.log("big_spans = \n", n), console.log("small_spans = \n", a));
                            var l = !1,
                                s = !1;
                            (v(e[1]) || v(e[2])) && (l = !0),
                            "0.00" === e[1] && "0.00" === e[2] && (s = !0);
                            for (var i = 0; i < n.length; i++) 
                                n[i].innerHTML = e[i],
                                !0 === l
                                    ? (n[i].classList.add("big-span-green"), 0 === i && r.setAttribute("data-status", "big-span-down"))
                                    : !0 === s
                                        ? (n[i].classList.add("big-span-default"), 0 === i && r.setAttribute("data-status", "big-span-default"))
                                        : (n[i].classList.add("big-span-red"), 0 === i && r.setAttribute("data-status", "big-span-up"));
                            for (var d = 0; d < a.length; d++) 
                                !0 === v(t[d])
                                    ? (a[d].innerHTML = t[d], a[d].classList.add("small-span-green"))
                                    : (a[d].innerHTML = "+" + t[d], a[d].classList.add("small-span-red"))
                            }(h, f);
                        var m = e
                            .details
                            .map(function (e, t) {
                                return o && (o && e.sjz, console.log("obj =", e, t)),
                                e.sjz
                            });
                        l = (m = m.sort()).map(function (t) {
                            for (var o = 0; o < m.length; o++) 
                                if (t === e.details[o].sjz) 
                                    return e.details[o]
                        });
                        var b = {};
                        Object
                            .keys(l[0])
                            .forEach(function (e, t) {
                                var o = "";
                                switch (e) {
                                    case "sjz":
                                        o = "time";
                                        break;
                                    case "gj":
                                        o = "stock_price";
                                        break;
                                    case "cjl":
                                        o = "turn_over";
                                        break;
                                    case "szzs":
                                        o = "SH_Index";
                                        break;
                                    default:
                                        o = "暂无数据"
                                }
                                b[o] = []
                            });
                        var S = 1;
                        l.map(function (e, t) {
                            var n = "",
                                a = "",
                                r = "",
                                l = "";
                            n = void 0 !== e.sjz
                                ? e.sjz
                                : null,
                            a = void 0 !== e.cjl
                                ? parseFloat(e.cjl)
                                : null,
                            r = void 0 !== e.gj
                                ? parseFloat(e.gj)
                                : null,
                            l = void 0 !== e.szzs && "--" !== e.szzs
                                ? parseFloat(e.szzs)
                                : null,
                            b
                                .time
                                .push(n),
                            b
                                .stock_price
                                .push(r),
                            b
                                .turn_over
                                .push(a),
                            b
                                .SH_Index
                                .push(l),
                            o && 1 === S && (console.log("arr_obj = ", JSON.stringify(b, null, 4)), S++)
                        }),
                        r = Object.assign(r, b),
                        a
                            .Modules
                            .SPTurnover
                            .SPTdrawHS(r, t)
                    } else 
                        r.time = [],
                        r.SH_Index = [],
                        r.turn_over = [],
                        r.stock_price = [],
                        a
                            .Modules
                            .SPTurnover
                            .SPTdrawHS(r, t)
                    })
                .catch(function (e) {
                    return console.log("error = \n", e)
                }),
            r
        },
        a.Modules.SPTurnover.SPTdrawHS = a.Modules.SPTurnover.SPTdrawHS || function () {
            var e = arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                t = arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : "container",
                o = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                n = e.time;
            e.SH_Index,
            e.turn_over,
            e.stock_price,
            n.length,
            o && console.log("datas = \n", e);
            var a = [],
                r = [],
                l = [],
                s = [],
                i = e.time.length,
                d = [],
                u = 0;
            for (u; u < i; u++) {
                var c = new Date(e.time[u]).getTime();
                d.push([c, e.stock_price[u], e.turn_over[u], e.SH_Index[u]]),
                r.push([c, e.stock_price[u]]),
                l.push([c, e.turn_over[u]]),
                s.push([c, e.SH_Index[u]])
            }
            o && (console.log(a), console.log(r), console.log(s), console.log(l)),
            Highcharts.setOptions({
                lang: {
                    rangeSelectorZoom: "缩放",
                    rangeSelectorFrom: "从",
                    rangeSelectorTo: "到",
                    contextButtonTitle: "图表导出菜单",
                    decimalPoint: ".",
                    downloadJPEG: "下载JPEG图片",
                    downloadPDF: "下载PDF文件",
                    downloadPNG: "下载PNG文件",
                    downloadSVG: "下载SVG文件",
                    drillUpText: "返回 {series.name}",
                    loading: "加载中...",
                    months: [
                        "一月",
                        "二月",
                        "三月",
                        "四月",
                        "五月",
                        "六月",
                        "七月",
                        "八月",
                        "九月",
                        "十月",
                        "十一月",
                        "十二月"
                    ],
                    noData: '\n                    <p data-none="no-data-hc">\n                        <span ' +
                            'data-none="no-data-span"></span>\n                    </p>\n                ',
                    numericSymbols: [
                        "k",
                        "M",
                        "G",
                        "T",
                        "P",
                        "E"
                    ],
                    printChart: "打印图表",
                    resetZoom: "重置缩放比例",
                    resetZoomTitle: "重置为原始大小",
                    shortMonths: [
                        "一",
                        "二",
                        "三",
                        "四",
                        "五",
                        "六",
                        "七",
                        "八",
                        "九",
                        "十",
                        "十一",
                        "十二"
                    ],
                    thousandsSep: ",",
                    shortWeekdays: [
                        "周天",
                        "周一",
                        "周二",
                        "周三",
                        "周四",
                        "周五",
                        "周六"
                    ],
                    weekdays: [
                        "星期天",
                        "星期一",
                        "星期二",
                        "星期三",
                        "星期四",
                        "星期五",
                        "星期六"
                    ]
                }
            }),
            Highcharts.stockChart(t, {
                chart: {
                    marginTop: 20
                },
                noData: {
                    useHTML: !0
                },
                credits: {
                    enabled: !1,
                    href: "https://www.gildata.com",
                    text: "gildata"
                },
                title: {},
                xAxis: {
                    labels: {
                        autoRotation: [0],
                        step: 1
                    },
                    type: "datetime",
                    dateTimeLabelFormats: {
                        day: "%m月 %d日",
                        week: "%m月 %d日",
                        month: "%y年 %m月",
                        year: "%Y年"
                    },
                    tooltip: {
                        xDateFormat: "%Y年 %m月 %d日"
                    }
                },
                yAxis: [
                    {
                        labels: {
                            align: "right",
                            x: -3
                        },
                        title: {
                            text: "股价"
                        },
                        height: "70%",
                        lineWidth: 2,
                        plotLines: [
                            {
                                value: 0,
                                width: 2,
                                color: "silver"
                            }
                        ],
                        opposite: !1
                    }, {
                        labels: {
                            align: "left",
                            x: 3
                        },
                        title: {
                            text: "上证指数"
                        },
                        height: "70%",
                        offset: 0,
                        lineWidth: 2
                    }, {
                        labels: {
                            align: "left",
                            x: 3
                        },
                        title: {
                            text: "成交量"
                        },
                        top: "72.5%",
                        height: "27.5%",
                        offset: 0,
                        lineWidth: 2
                    }
                ],
                series: [
                    {
                        type: "line",
                        name: "股价",
                        color: "green",
                        lineColor: "green",
                        upColor: "red",
                        upLineColor: "red",
                        tooltip: {
                            valueSuffix: " 元"
                        },
                        data: r,
                        yAxis: 0
                    }, {
                        type: "column",
                        name: "成交量",
                        data: l,
                        yAxis: 2,
                        tooltip: {
                            valueSuffix: "手"
                        }
                    }, {
                        type: "line",
                        name: "上证指数",
                        data: s,
                        color: "#1a75bc",
                        yAxis: 1,
                        tooltip: {
                            valueSuffix: " 点"
                        }
                    }
                ],
                tooltip: {
                    xDateFormat: "%Y年 %m月 %d日",
                    shared: !0
                },
                plotOptions: {
                    series: {
                        pointStart: Date.UTC(2012, 0, 1),
                        pointInterval: 864e5
                    }
                },
                navigator: {
                    enabled: !1,
                    height: 20,
                    margin: 10,
                    handles: {
                        backgroundColor: "#fff",
                        borderColor: "#000"
                    },
                    baseSeries: 7
                },
                scrollbar: {
                    enabled: !0,
                    step: 3,
                    minWidth: 23,
                    liveRedraw: !0
                },
                rangeSelector: {
                    selected: 0,
                    inputDateFormat: "%Y-%m-%d",
                    allButtonsEnabled: !1,
                    buttons: [
                        {
                            type: "day",
                            count: 36,
                            text: "一天",
                            dataGrouping: {
                                units: [
                                    ["day", [1]
                                    ]
                                ]
                            }
                        }
                    ],
                    buttonTheme: {
                        width: 0
                    }
                }
            }),
            setTimeout(function () {
                document
                    .querySelector(".highcharts-range-selector-buttons")
                    .style
                    .display = "none"
            }, 0)
        },
        a.Modules.SPTurnover.init = a.Modules.SPTurnover.init || function () {
            var e = arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {
                        ip: "http://10.1.5.202",
                        path: "/webservice/fastview/stock/stockfast06/",
                        gilcode: "600570.SH"
                    },
                t = "" + e.ip + e.path + e.gilcode;
            a
                .Modules
                .SPTurnover(t, "stock_price_turnover_hs_container", !1)
        },
        a
            .Modules
            .SPTurnover
            .init({
                ip: STOCK_IP,
                path: STOCK_Paths + "/stockfast06/",
                gilcode: STOCK_SecCode
            })
    }
});
//# sourceMappingURL=stock-price-turnover.min.js.map

//# sourceMappingURL=stock-price-turnover.min.js.map