{"version":3,"sources":["webpack:///turnover-trend-diagram.min.js","webpack:///webpack/bootstrap f09f3ec5130697a23caf","webpack:///./modules/turnover-trend-diagram.js"],"names":["o","__webpack_require__","moduleId","installedModules","exports","module","i","l","modules","call","m","c","d","name","getter","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","342","t","e","assign","arguments","length","r","Symbol","iterator","constructor","OTC_TS_FV","Modules","turnoverTrendMakeMarketDiagram","url","uid","debug","fetch","then","res","json","_typeof","console","log","arr","temp_sort_arr","push","rq","sort","slice","obj_market","objs_arr","sort_arr","turnover_time","turnover_number","turnover_amount","map","obj","ii","parseFloat","cjl","cje","new_obj","JSON","stringify","market_uid","drawHC","catch","error","turnoverTrendProtocolDiagram","obj_protocol","protocol_uid","setTimeout","turn_to_uid","document","querySelector","Error","addEventListener","target","dataset","topic_category","topicCategory","node_path","ChromeExternal","Execute","datas","_chart_css","_extends","color","colors","optioncolor","gridColor","legendColor","yAxisColor","_datas","skin_color","OTC_SKIN","legend_item_color","legend_item_hover_color","title_color","legend_bg_color","Highcharts","setOptions","lang","rangeSelectorZoom","rangeSelectorFrom","rangeSelectorTo","contextButtonTitle","decimalPoint","downloadJPEG","downloadPDF","downloadPNG","downloadSVG","drillUpText","loading","months","noData","numericSymbols","printChart","resetZoom","resetZoomTitle","shortMonths","thousandsSep","shortWeekdays","weekdays","chart","useHTML","type","backgroundColor","height","title","text","style","fontSize","fontWeight","xAxis","categories","labels","autoRotation","step","credits","enabled","href","yAxis","min","getOptions","opposite","gridLineColor","legend","align","x","y","verticalAlign","floating","shadow","itemStyle","itemHoverStyle","tooltip","shared","headerFormat","pointFormat","plotOptions","series","data","connectNulls","init","_ref","ip","path","socket","skin","_ref2","OTC_IP","window","OTC_PATH"],"mappings":"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","file":"turnover-trend-diagram.min.js","sourcesContent":["/*! For license information please see turnover-trend-diagram.min.js.LICENSE */\n!function(o){var n={};function t(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return o[e].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=o,t.c=n,t.d=function(o,n,e){t.o(o,n)||Object.defineProperty(o,n,{configurable:!1,enumerable:!0,get:e})},t.n=function(o){var n=o&&o.__esModule?function(){return o.default}:function(){return o};return t.d(n,\"a\",n),n},t.o=function(o,n){return Object.prototype.hasOwnProperty.call(o,n)},t.p=\"\",t(t.s=342)}({342:function(o,n,t){\"use strict\";var e=Object.assign||function(o){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var e in t)Object.prototype.hasOwnProperty.call(t,e)&&(o[e]=t[e])}return o},r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(o){return typeof o}:function(o){return o&&\"function\"==typeof Symbol&&o.constructor===Symbol&&o!==Symbol.prototype?\"symbol\":typeof o};(a=a||{}).Modules=a.Modules||{},a.Modules.turnoverTrendMakeMarketDiagram=a.Modules.turnoverTrendMakeMarketDiagram||function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];fetch(o).then(function(o){return o.json()}).then(function(o){if(void 0!==o&&\"object\"===(void 0===o?\"undefined\":r(o))){t&&console.log(\"json = \\n\",o);for(var e=o||[],l=[],i=0;i<e.length;i++)l.push(e[i].rq);l=l.sort(),t&&console.log(\"temp_sort_arr = \\n\",l.slice(0,4));var s=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t&&(console.log(\"arr = \\n\",o),console.log(\"sort_arr = \\n\",n));for(var e=[],r=[],a=[],i=0;i<n.length;i++)s=i,o.map(function(o,n){o.rq===l[s]&&(t&&0===n&&(console.log('obj[\"rq\"] = \\n',o.rq,n),console.log(\"temp_sort_arr[i] = \\n\",l[s],s)),e.push(o.rq),r.push(parseFloat(o.cjl)),a.push(parseFloat(o.cje)))}),t&&3===s&&(console.log(\"turnover_time = \\n\",e),console.log(\"turnover_number = \\n\",r),console.log(\"turnover_amount = \\n\",a));var s,c={turnover_time:e,turnover_number:r,turnover_amount:a};return t&&console.log(\"new_obj = \\n\",JSON.stringify(c,null,4)),c}(e,l)||{};t&&console.log(\"obj_market = \\n\",s);var c=n;t&&console.log(\"uid = \\n\",n),a.Modules.turnoverTrendMakeMarketDiagram.drawHC(s,c,!1)}}).catch(function(o){return console.log(\"error = \\n\",o)})};var a;(a=a||{}).Modules=a.Modules||{},a.Modules.turnoverTrendProtocolDiagram=a.Modules.turnoverTrendProtocolDiagram||function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:\"\",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];fetch(o).then(function(o){return o.json()}).then(function(o){if(void 0!==o&&\"object\"===(void 0===o?\"undefined\":r(o))){t&&console.log(\"json = \\n\",o);for(var e=o||[],l=[],i=0;i<e.length;i++)l.push(e[i].rq);l=l.sort(),t&&console.log(\"temp_sort_arr = \\n\",l.slice(0,4));var s=function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t&&(console.log(\"arr = \\n\",o),console.log(\"sort_arr = \\n\",n));for(var e=[],r=[],a=[],i=0;i<n.length;i++)s=i,o.map(function(o,n){o.rq===l[s]&&(t&&0===n&&(console.log('obj[\"rq\"] = \\n',o.rq,n),console.log(\"temp_sort_arr[i] = \\n\",l[s],s)),e.push(o.rq),r.push(parseFloat(o.cjl)),a.push(parseFloat(o.cje)))}),t&&3===s&&(console.log(\"turnover_time = \\n\",e),console.log(\"turnover_number = \\n\",r),console.log(\"turnover_amount = \\n\",a));var s,c={turnover_time:e,turnover_number:r,turnover_amount:a};return t&&console.log(\"new_obj = \\n\",JSON.stringify(c,null,4)),c}(e,l)||{};t&&console.log(\"obj_protocol = \\n\",s);var c=n;a.Modules.turnoverTrendProtocolDiagram.drawHC(s,c,!1)}}).catch(function(o){return console.log(\"error = \\n\",o)}),setTimeout(function(){var o=arguments.length>0&&void 0!==arguments[0]&&arguments[0],n=document.querySelector('[data-turn-to-uid=\"node-uid-turnover-trend-diagram\"]');if(o&&console.log(\"turn_to_uid dom = \\n\",n),null===n)throw new Error(\"turn_to_uid dom is \",n);n.addEventListener(\"click\",function(o){var n=o.target.dataset.uid,t=o.target.dataset.topicCategory,e=\"13\\\\\"+t+\"\\\\\"+n;try{void 0!==n&&void 0!==t?ChromeExternal.Execute(\"ExecuteCommand\",e):console.log(\"ChromeExternal \\nuid === \"+n+\" & topic_category === \"+t)}catch(o){console.log(\"%c ChromeExternal & caught error = \\n\",\"color: red; font-size: 23px;\",o),console.log(\"node uid = \",n),console.log(\"node topic_category = \",t),console.log(\"node node_path = \",e)}})},0)},a.Modules.turnoverTrendMakeMarketDiagram.drawHC=a.Modules.turnoverTrendMakeMarketDiagram.drawHC||function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t&&(console.log(\"HC obj = \\n\",o),console.log(\"HC uid = \\n\",n),console.log(\"HC debug = \\n\",t));var r=o,a=e({},{color:\"#0B1016\",colors:[\"#ff1919\",\"#ffff66\",\"#92d050\"],optioncolor:\"red\",gridColor:\"#2D3039\",legendColor:\"#fff\",yAxisColor:\"#FFB400\"}),l=(a.color,a.colors,a.optioncolor,a.gridColor,a.legendColor,a.yAxisColor,e({},r)),i=l.turnover_time,c=l.turnover_number,d=l.turnover_amount;t&&(console.log(\"HC turnover_time = \\n\",i),console.log(\"HC turnover_number = \\n\",c),console.log(\"HC turnover_amount = \\n\",d));var u=\"black\"===s?\"#0b1016\":\"#fff\",g=\"black\"===s?\"#fff\":\"#0b1016\",p=\"black\"===s?\"#f79530\":\"#000\",m=\"black\"===s?\"#fff\":\"#000\",v=\"black\"===s?\"#0b1016\":\"#fff\";Highcharts.setOptions({lang:{rangeSelectorZoom:\"缩放\",rangeSelectorFrom:\"从\",rangeSelectorTo:\"到\",contextButtonTitle:\"图表导出菜单\",decimalPoint:\".\",downloadJPEG:\"下载JPEG图片\",downloadPDF:\"下载PDF文件\",downloadPNG:\"下载PNG文件\",downloadSVG:\"下载SVG文件\",drillUpText:\"返回 {series.name}\",loading:\"加载中...\",months:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],noData:'\\n                    <p data-none=\"no-data-hc\">\\n                        <span data-none=\"no-data-span\"></span>\\n                    </p>\\n                ',numericSymbols:[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],printChart:\"打印图表\",resetZoom:\"重置缩放比例\",resetZoomTitle:\"重置为原始大小\",shortMonths:[\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\",\"十一\",\"十二\"],thousandsSep:\",\",shortWeekdays:[\"周天\",\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\"],weekdays:[\"星期天\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]}}),Highcharts.chart(n,{noData:{useHTML:!0},chart:{type:\"column\",backgroundColor:u,height:272},title:{text:\"做市\",style:{color:m,fontSize:\"13px\",fontWeight:\"bold\"}},xAxis:{categories:i,labels:{autoRotation:[0],step:20}},credits:{enabled:!1,href:\"https://www.gildata.com\",text:\"gildata\"},colors:[\"#ff1919\",\"#33ff77\",\"#92d050\"],yAxis:[{min:0,title:{text:\"\"},labels:{style:{color:Highcharts.getOptions().colors[1]}}},{min:0,title:{text:\"\"},opposite:!0,gridLineColor:\"#2D3039\"}],legend:{align:\"center\",backgroundColor:v,x:0,y:0,verticalAlign:\"bottom\",floating:!1,shadow:!1,itemStyle:{color:g},itemHoverStyle:{color:p}},tooltip:{shared:!0,headerFormat:\"\\n                    <strong>\\n                        {point.x}\\n                    </strong>\\n                    <br/>\\n                \",pointFormat:'\\n                    <span style=\"color:{point.color}\">●</span>\\n                    {series.name}: {point.y}<br/>\\n                    <span style=\"color:{point.color}\">●</span>\\n                '},plotOptions:{},series:[{type:\"area\",yAxis:0,name:\"成交额(亿元)\",data:d,connectNulls:!0,tooltip:{headerFormat:\"\\n                            <strong>\\n                                {point.x}\\n                            </strong>\\n                            <br/>\\n                        \",pointFormat:'\\n                            <span style=\"color:{point.color}\">●</span>\\n                            {series.name}: <b>{point.y}</b><br/>\\n                        '}},{type:\"area\",yAxis:1,color:\"#3f3\",name:\"成交量(亿股)\",data:c,connectNulls:!0,tooltip:{headerFormat:\"\\n                            <strong>\\n                                {point.x}\\n                            </strong>\\n                            <br/>\\n                        \",pointFormat:'\\n                            <span style=\"color:{point.color}\">●</span>\\n                            {series.name}: <b>{point.y}</b><br/>\\n                        '}}]})},a.Modules.turnoverTrendProtocolDiagram.drawHC=a.Modules.turnoverTrendProtocolDiagram.drawHC||function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:\"\",t=arguments.length>2&&void 0!==arguments[2]&&arguments[2];t&&(console.log(\"HC obj = \\n\",o),console.log(\"HC uid = \\n\",n),console.log(\"HC debug = \\n\",t));var e=o,r=e.turnover_time,a=e.turnover_number,l=e.turnover_amount;t&&(console.log(\"HC turnover_time = \\n\",r),console.log(\"HC turnover_number = \\n\",a),console.log(\"HC turnover_amount = \\n\",l));var i=\"black\"===s?\"#0b1016\":\"#fff\",c=\"black\"===s?\"#fff\":\"#0b1016\",d=\"black\"===s?\"#f79530\":\"#000\",u=\"black\"===s?\"#fff\":\"#000\",g=\"black\"===s?\"#0b1016\":\"#fff\";Highcharts.setOptions({lang:{rangeSelectorZoom:\"缩放\",rangeSelectorFrom:\"从\",rangeSelectorTo:\"到\",contextButtonTitle:\"图表导出菜单\",decimalPoint:\".\",downloadJPEG:\"下载JPEG图片\",downloadPDF:\"下载PDF文件\",downloadPNG:\"下载PNG文件\",downloadSVG:\"下载SVG文件\",drillUpText:\"返回 {series.name}\",loading:\"加载中...\",months:[\"一月\",\"二月\",\"三月\",\"四月\",\"五月\",\"六月\",\"七月\",\"八月\",\"九月\",\"十月\",\"十一月\",\"十二月\"],noData:'\\n                    <p data-none=\"no-data-hc\">\\n                        <span data-none=\"no-data-span\"></span>\\n                    </p>\\n                ',numericSymbols:[\"k\",\"M\",\"G\",\"T\",\"P\",\"E\"],printChart:\"打印图表\",resetZoom:\"重置缩放比例\",resetZoomTitle:\"重置为原始大小\",shortMonths:[\"一\",\"二\",\"三\",\"四\",\"五\",\"六\",\"七\",\"八\",\"九\",\"十\",\"十一\",\"十二\"],thousandsSep:\",\",shortWeekdays:[\"周天\",\"周一\",\"周二\",\"周三\",\"周四\",\"周五\",\"周六\"],weekdays:[\"星期天\",\"星期一\",\"星期二\",\"星期三\",\"星期四\",\"星期五\",\"星期六\"]}}),Highcharts.chart(n,{noData:{useHTML:!0},chart:{type:\"column\",backgroundColor:i,height:272},title:{text:\"协议\",style:{color:u,fontSize:\"13px\",fontWeight:\"bold\"}},xAxis:{categories:r,labels:{autoRotation:[0],step:20}},credits:{enabled:!1,href:\"https://www.gildata.com\",text:\"gildata\"},colors:[\"#ff1919\",\"#33ff66\",\"#92d050\"],yAxis:[{min:0,title:{text:\"\"},labels:{style:{color:Highcharts.getOptions().colors[1]}}},{min:0,title:{text:\"\"},opposite:!0,gridLineColor:\"#2D3039\"}],legend:{align:\"center\",backgroundColor:g,x:0,y:0,verticalAlign:\"bottom\",floating:!1,shadow:!1,itemStyle:{color:c},itemHoverStyle:{color:d}},tooltip:{shared:!0,headerFormat:\"\\n                    <strong>\\n                        {point.x}\\n                    </strong>\\n                    <br/>\\n                \",pointFormat:'\\n                    <span style=\"color:{point.color}\">●</span>\\n                    {series.name}: {point.y}<br/>\\n                    <span style=\"color:{point.color}\">●</span>\\n                '},plotOptions:{},series:[{type:\"area\",yAxis:0,name:\"成交额(亿元)\",data:l,connectNulls:!0,tooltip:{headerFormat:\"\\n                            <strong>\\n                                {point.x}\\n                            </strong>\\n                            <br/>\\n                        \",pointFormat:'\\n                            <span style=\"color:{point.color}\">●</span>\\n                            {series.name}: <b>{point.y}</b><br/>\\n                        '}},{type:\"area\",yAxis:1,color:\"rgb(25, 255, 25)\",name:\"成交量(亿股)\",data:a,connectNulls:!0,tooltip:{headerFormat:\"\\n                            <strong>\\n                                {point.x}\\n                            </strong>\\n                            <br/>\\n                        \",pointFormat:'\\n                            <span style=\"color:{point.color}\">●</span>\\n                            {series.name}: <b>{point.y}</b><br/>\\n                        '}}]})},a.Modules.turnoverTrendMakeMarketDiagram.init=a.Modules.turnoverTrendMakeMarketDiagram.init||function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{ip:\"http://10.1.5.202\",path:\"/webservice/fastview/otc\",socket:\"/otcfast10\",skin:\"black\"},n=o.ip,t=o.path,e=o.socket,r=(o.skin,\"\"+n+t+e);a.Modules.turnoverTrendMakeMarketDiagram(r,\"turnover_trend_make_market_diagram_hs_container\",!1)},a.Modules.turnoverTrendProtocolDiagram.init=a.Modules.turnoverTrendProtocolDiagram.init||function(){var o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{ip:\"http://10.1.5.202\",path:\"/webservice/fastview/otc\",socket:\"/otcfast11\",skin:\"black\"},n=o.ip,t=o.path,e=o.socket,r=(o.skin,\"\"+n+t+e);a.Modules.turnoverTrendProtocolDiagram(r,\"turnover_trend_protocol_diagram_hs_container\",!1)};var l=window.OTC_IP||\"http://10.1.5.202\",i=window.OTC_PATH||\"/webservice/fastview/otc\",s=window.OTC_SKIN||\"black\";a.Modules.turnoverTrendMakeMarketDiagram.init({ip:l,path:i,socket:\"/otcfast10\",skin:s}),a.Modules.turnoverTrendProtocolDiagram.init({ip:l,path:i,socket:\"/otcfast11\",skin:s})}});\n\n\n// WEBPACK FOOTER //\n// turnover-trend-diagram.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 342);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f09f3ec5130697a23caf","\"use strict\";\r\n\r\n/**\r\n * @namespace OTC_TS_FV : OTC Thematic Statistics\r\n * @name turnover-trend-make-market-diagram 成交走势-做市\r\n * @createed 2017.11.21\r\n * @author xgqfrms\r\n * @copyright Gildata, Inc 2017-present\r\n * @license MIT\r\n * @version v1.1.1\r\n *\r\n * @param {* String} url\r\n * @param {* Boolean} debug\r\n */\r\n\r\n// namespaces\r\nvar OTC_TS_FV = OTC_TS_FV || {};\r\n// sub namespaces\r\nOTC_TS_FV.Modules = OTC_TS_FV.Modules || {};\r\n\r\n/*\r\n\r\nturnoverTrendDiagrams\r\n\r\n*/\r\n// turnoverTrendMakeMarketDiagram\r\nOTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram = OTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram || ((url = ``, uid = ``, debug = false) => {\r\n    let result_obj = {};\r\n    // urls ???\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(\r\n        (json) => {\r\n            // empty checker\r\n            if (json !== undefined && typeof(json) === \"object\") {\r\n                if (debug) {\r\n                    console.log(`json = \\n`, json);\r\n                    // array\r\n                    // console.log(`json = \\n`, json.slice(0, 3));\r\n                }\r\n                let arr = json || [],\r\n                    temp_sort_arr = [];\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    temp_sort_arr.push(arr[i][\"rq\"]);\r\n                }\r\n                temp_sort_arr = temp_sort_arr.sort();\r\n                if (debug) {\r\n                    // console.log(`temp_sort_arr = \\n`, temp_sort_arr);\r\n                    console.log(`temp_sort_arr = \\n`, temp_sort_arr.slice(0, 4));\r\n                }\r\n                const sortArrayObjectsHandler = (objs_arr = [], sort_arr = [], debug = false) => {\r\n                    if (debug) {\r\n                        console.log(`arr = \\n`, objs_arr);\r\n                        console.log(`sort_arr = \\n`, sort_arr);\r\n                        // console.log(`arr keys = \\n`, Object.keys(arr[0]));\r\n                    }\r\n                    let turnover_time = [],\r\n                        turnover_number = [],\r\n                        turnover_amount = [];\r\n                    for (let i = 0; i < sort_arr.length; i++) {\r\n                        objs_arr.map(\r\n                            (obj, ii) => {\r\n                                if (obj[\"rq\"] === temp_sort_arr[i]) {\r\n                                    if (debug && ii === 0) {\r\n                                        console.log(`obj[\"rq\"] = \\n`, obj[\"rq\"], ii);\r\n                                        console.log(`temp_sort_arr[i] = \\n`, temp_sort_arr[i], i);\r\n                                    }\r\n                                    turnover_time.push(obj[\"rq\"]);\r\n                                    turnover_number.push(parseFloat(obj[\"cjl\"]));\r\n                                    turnover_amount.push(parseFloat(obj[\"cje\"]));\r\n                                }else{\r\n                                    // break\r\n                                }\r\n                            }\r\n                        );\r\n                        if (debug  && i === 3) {\r\n                            console.log(`turnover_time = \\n`, turnover_time);\r\n                            console.log(`turnover_number = \\n`, turnover_number);\r\n                            console.log(`turnover_amount = \\n`, turnover_amount);\r\n                        }\r\n                    }\r\n                    const new_obj = {\r\n                        turnover_time,\r\n                        turnover_number,\r\n                        turnover_amount\r\n                    };\r\n                    if (debug) {\r\n                        console.log(`new_obj = \\n`, JSON.stringify(new_obj, null, 4));\r\n                    }\r\n                    return new_obj;\r\n                };\r\n                // let obj_market = sortArrayObjectsHandler(arr, temp_sort_arr) || {},\r\n                //     obj_protocol = dsortArrayObjectsHandler(arr, temp_sort_arr) || {};\r\n                let obj_market = sortArrayObjectsHandler(arr, temp_sort_arr) || {};\r\n                // let obj_protocol = sortArrayObjectsHandler(arr, temp_sort_arr) || {};\r\n                if (debug) {\r\n                    console.log(`obj_market = \\n`, obj_market);\r\n                    // console.log(`obj_protocol = \\n`, obj_protocol);\r\n                    // console.log(`obj_market = \\n`, JSON.stringify(obj_market, null, 4));\r\n                    // console.log(`obj_protocol = \\n`, JSON.stringify(obj_protocol, null, 4));\r\n                }\r\n                // Object.assign(result_obj, {obj_market, obj_protocol});\r\n                // if (debug) {\r\n                //     console.log(`result_obj = \\n`, JSON.stringify(result_obj, null, 4));\r\n                // }\r\n                let market_uid = uid;\r\n                if (debug) {\r\n                    console.log(`uid = \\n`, uid);\r\n                }\r\n                // let market_uid = uids.market_uid,\r\n                //     protocol_uid = uids.protocol_uid;\r\n                // result_obj ??? no need\r\n                OTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram.drawHC(obj_market, market_uid, false);\r\n                // OTC_TS_FV.Modules.turnoverTrendProtocolDiagram.drawHC(obj_protocol, protocol_uid, false);\r\n            }\r\n        }\r\n    )\r\n    .catch(error => console.log(`error = \\n`, error));\r\n    // return result_obj;\r\n});\r\n\r\n\r\n\r\n// OTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram(`http://10.1.5.202/webservice/fastview/otc/otcfast10`, `#turnover_trend_make_market_diagram_hs_container`, false);\r\n\r\n\r\n\r\n/**\r\n * @namespace OTC_TS_FV : OTC Thematic Statistics\r\n * @name turnover-trend-protocol-diagram 成交走势-协议\r\n * @createed 2017.11.21\r\n * @author xgqfrms\r\n * @copyright Gildata, Inc 2017-present\r\n * @license MIT\r\n * @version v1.1.1\r\n *\r\n * @param {* String} url\r\n * @param {* Boolean} debug\r\n */\r\n\r\n// namespaces\r\nvar OTC_TS_FV = OTC_TS_FV || {};\r\n// sub namespaces\r\nOTC_TS_FV.Modules = OTC_TS_FV.Modules || {};\r\n\r\n// turnoverTrendProtocolDiagram\r\nOTC_TS_FV.Modules.turnoverTrendProtocolDiagram = OTC_TS_FV.Modules.turnoverTrendProtocolDiagram || ((url = ``, uid = ``, debug = false) => {\r\n    let result_obj = {};\r\n    // urls ???\r\n    fetch(url)\r\n    .then(res => res.json())\r\n    .then(\r\n        (json) => {\r\n            if (json !== undefined && typeof(json) === \"object\") {\r\n                if (debug) {\r\n                    console.log(`json = \\n`, json);\r\n                    // array\r\n                    // console.log(`json = \\n`, json.slice(0, 3));\r\n                }\r\n                let arr = json || [],\r\n                    temp_sort_arr = [];\r\n                for (let i = 0; i < arr.length; i++) {\r\n                    temp_sort_arr.push(arr[i][\"rq\"]);\r\n                }\r\n                temp_sort_arr = temp_sort_arr.sort();\r\n                if (debug) {\r\n                    // console.log(`temp_sort_arr = \\n`, temp_sort_arr);\r\n                    console.log(`temp_sort_arr = \\n`, temp_sort_arr.slice(0, 4));\r\n                }\r\n                const sortArrayObjectsHandler = (objs_arr = [], sort_arr = [], debug = false) => {\r\n                    if (debug) {\r\n                        console.log(`arr = \\n`, objs_arr);\r\n                        console.log(`sort_arr = \\n`, sort_arr);\r\n                        // console.log(`arr keys = \\n`, Object.keys(arr[0]));\r\n                    }\r\n                    let turnover_time = [],\r\n                        turnover_number = [],\r\n                        turnover_amount = [];\r\n                    for (let i = 0; i < sort_arr.length; i++) {\r\n                        objs_arr.map(\r\n                            (obj, ii) => {\r\n                                if (obj[\"rq\"] === temp_sort_arr[i]) {\r\n                                    if (debug && ii === 0) {\r\n                                        console.log(`obj[\"rq\"] = \\n`, obj[\"rq\"], ii);\r\n                                        console.log(`temp_sort_arr[i] = \\n`, temp_sort_arr[i], i);\r\n                                    }\r\n                                    turnover_time.push(obj[\"rq\"]);\r\n                                    turnover_number.push(parseFloat(obj[\"cjl\"]));\r\n                                    turnover_amount.push(parseFloat(obj[\"cje\"]));\r\n                                }else{\r\n                                    // break\r\n                                }\r\n                            }\r\n                        );\r\n                        if (debug  && i === 3) {\r\n                            console.log(`turnover_time = \\n`, turnover_time);\r\n                            console.log(`turnover_number = \\n`, turnover_number);\r\n                            console.log(`turnover_amount = \\n`, turnover_amount);\r\n                        }\r\n                    }\r\n                    const new_obj = {\r\n                        turnover_time,\r\n                        turnover_number,\r\n                        turnover_amount\r\n                    };\r\n                    if (debug) {\r\n                        console.log(`new_obj = \\n`, JSON.stringify(new_obj, null, 4));\r\n                    }\r\n                    return new_obj;\r\n                };\r\n                // let obj_protocol = {};\r\n                let obj_protocol = sortArrayObjectsHandler(arr, temp_sort_arr) || {};\r\n                if (debug) {\r\n                    console.log(`obj_protocol = \\n`, obj_protocol);\r\n                    // console.log(`obj_protocol = \\n`, JSON.stringify(obj_protocol, null, 4));\r\n                }\r\n                let protocol_uid = uid;\r\n                // result_obj ??? no need\r\n                OTC_TS_FV.Modules.turnoverTrendProtocolDiagram.drawHC(obj_protocol, protocol_uid, false);\r\n            }\r\n        }\r\n    )\r\n    .catch(error => console.log(`error = \\n`, error));\r\n    // return result_obj;\r\n    // more\r\n    setTimeout((debug = false) => {\r\n        let turn_to_uid = document.querySelector(`[data-turn-to-uid=\"node-uid-turnover-trend-diagram\"]`);\r\n        if (debug) {\r\n            console.log(`turn_to_uid dom = \\n`, turn_to_uid);\r\n        }\r\n        if (turn_to_uid !== null) {\r\n            turn_to_uid.addEventListener(`click`, (e) => {\r\n                    let uid = e.target.dataset.uid,\r\n                        topic_category  = e.target.dataset.topicCategory,// 专题分类名称常量\r\n                        node_path = `13\\\\${topic_category}\\\\${uid}`;\r\n                    try {\r\n                        if (uid !== undefined && topic_category !== undefined) {\r\n                            ChromeExternal.Execute(\"ExecuteCommand\", node_path);\r\n                            // ChromeExternal.Execute(\"ExecuteCommand\", `13\\\\${topic_category}\\\\${uid}`);\r\n                        }else{\r\n                            console.log(`ChromeExternal \\nuid === ${uid} & topic_category === ${topic_category}`);\r\n                        }\r\n                    } catch (error) {\r\n                        console.log(`%c ChromeExternal & caught error = \\n`, `color: red; font-size: 23px;`, error);\r\n                        console.log(`node uid = `, uid);\r\n                        console.log(`node topic_category = `, topic_category);\r\n                        console.log(`node node_path = `, node_path);\r\n                    }\r\n                });\r\n        }else{\r\n            // null\r\n            throw new Error(`turn_to_uid dom is `, turn_to_uid);\r\n        }\r\n    }, 0);\r\n});\r\n\r\n\r\n// OTC_TS_FV.Modules.turnoverTrendProtocolDiagram(`http://10.1.5.202/webservice/fastview/otc/otcfast11`, `#turnover_trend_protocol_diagram_hs_container`, false);\r\n\r\n\r\n\r\nOTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram.drawHC = OTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram.drawHC || (\r\n    (obj = {}, uid = ``, debug = false) => {\r\n        if (debug) {\r\n            console.log(`HC obj = \\n`, obj);\r\n            // console.log(`HC obj = \\n`, JSON.stringify(obj, null, 4));\r\n            console.log(`HC uid = \\n`, uid);\r\n            console.log(`HC debug = \\n`, debug);\r\n        }\r\n        const datas = obj;\r\n        let titles = {\r\n            title1: `title 1`,\r\n            title2: `title 2`\r\n        }\r\n        const chart_css = {\r\n            color: `#0B1016`,\r\n            colors: ['#ff1919', '#ffff66', '#92d050'],\r\n            optioncolor: `red`,\r\n            gridColor: `#2D3039`,\r\n            legendColor: `#fff`,\r\n            yAxisColor: `#FFB400`,\r\n        };\r\n        // css_obj ???\r\n        // babel & ES8 => ES5\r\n        const {color, colors, optioncolor, gridColor, legendColor, yAxisColor} = {...chart_css};\r\n        // let color = chart_css.color,\r\n        //     colors = chart_css.colors,\r\n        //     optioncolor = chart_css.optioncolor,\r\n        //     gridColor = chart_css.gridColor,\r\n        //     legendColor = chart_css.legendColor,\r\n        //     yAxisColor = chart_css.yAxisColor;\r\n        // babel & ES8 => ES5\r\n        let {\r\n            turnover_time,\r\n            turnover_number,\r\n            turnover_amount\r\n        } = {...datas};\r\n        // let turnover_time = datas.turnover_time,\r\n        //     turnover_number = datas.turnover_number,\r\n        //     turnover_amount = datas.turnover_amount;\r\n        if (debug) {\r\n            console.log(`HC turnover_time = \\n`, turnover_time);\r\n            console.log(`HC turnover_number = \\n`, turnover_number);\r\n            console.log(`HC turnover_amount = \\n`, turnover_amount);\r\n        }\r\n        let skin_color = (OTC_SKIN === \"black\") ? `#0b1016` : `#fff`,\r\n            legend_item_color = (OTC_SKIN === \"black\") ? `#fff` : `#0b1016`,\r\n            legend_item_hover_color = (OTC_SKIN === \"black\") ? `#f79530` : `#000`,\r\n            legend_label_color = (OTC_SKIN === \"black\") ? `#fff` : `#000`,\r\n            title_color = (OTC_SKIN === \"black\") ? `#fff` : `#000`,\r\n            legend_bg_color = (OTC_SKIN === \"black\") ? `#0b1016` : `#fff`;\r\n        Highcharts.setOptions({\r\n            lang: {\r\n                rangeSelectorZoom: '缩放',// 放大\r\n                rangeSelectorFrom: '从',\r\n                rangeSelectorTo: '到',\r\n                contextButtonTitle: '图表导出菜单',\r\n                decimalPoint: '.',\r\n                downloadJPEG: \"下载JPEG图片\",\r\n                downloadPDF: \"下载PDF文件\",\r\n                downloadPNG: \"下载PNG文件\",\r\n                downloadSVG: \"下载SVG文件\",\r\n                drillUpText: \"返回 {series.name}\",\r\n                loading: '加载中...',\r\n                months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\r\n                noData: `\r\n                    <p data-none=\"no-data-hc\">\r\n                        <span data-none=\"no-data-span\"></span>\r\n                    </p>\r\n                `,\r\n                // noData: \"没有数据显示!\",\r\n                numericSymbols: ['k', 'M', 'G', 'T', 'P', 'E'],\r\n                printChart: \"打印图表\",\r\n                resetZoom: '重置缩放比例',\r\n                resetZoomTitle: '重置为原始大小',\r\n                shortMonths: ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'],\r\n                thousandsSep: ',',\r\n                shortWeekdays: ['周天', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n                weekdays: ['星期天','星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n            },\r\n        });\r\n        // Highcharts.chart\r\n        Highcharts.chart(uid, {\r\n            noData: {// all defualt value\r\n                // attr: undefined,\r\n                // position: {\r\n                //     align: `center`,\r\n                //     verticalAlign: `middle`,\r\n                //     x: 0,\r\n                //     y: 0,\r\n                // },\r\n                // style: {\r\n                //     color: `#666666`,\r\n                //     fontSize: `12px`,\r\n                //     fontWeight: `bold`\r\n                // },\r\n                useHTML: true,\r\n            },\r\n            // rangeSelector: {\r\n            //     selected: 4\r\n            // },\r\n            chart: {\r\n                type: 'column',\r\n                // backgroundColor: chart_css.color\r\n                backgroundColor: skin_color,\r\n                // plotBorderWidth: 1,\r\n                // height: (9 / 16 * 100) + '%',\r\n                height: 272,// 275px;\r\n                // 16:9 ratio\r\n            },\r\n            title: {\r\n                text: '做市',// 协议\r\n                // text: 'Stacked column chart'\r\n                style: {\r\n                    \"color\": title_color,\r\n                    \"fontSize\": \"13px\",\r\n                    \"fontWeight\": \"bold\"\r\n                }\r\n            },\r\n            xAxis: {\r\n                // categories: ['2017-02', '2017-02', '2017-02', '2017-02', '2017-02'],\r\n                categories: turnover_time,\r\n                // min: 0,\r\n                // max: 8,\r\n                // xAxis datas\r\n                // labels: {\r\n                //     // autoRotation:'false',\r\n                //     autoRotation: [0],\r\n                //     step: 2\r\n                // },\r\n                labels: {\r\n                    // autoRotation:'false',\r\n                    autoRotation: [0],\r\n                    step: 20,\r\n                    // step: 18,\r\n                }\r\n            },\r\n            credits: {\r\n                // enabled: true,//\r\n                enabled: false,\r\n                href: `https://www.gildata.com`,\r\n                text: `gildata`,\r\n                // position: https://api.highcharts.com/highstock/credits.style,\r\n                // style: https://api.highcharts.com/highstock/credits.style\r\n            },\r\n            colors: ['#ff1919', '#33ff77', '#92d050'],// series color ???\r\n            // colors: [...colors],\r\n            yAxis: [\r\n                // yAxis 0\r\n                {\r\n                    // x: -50,\r\n                    // y: -50,\r\n                    // type: 'logarithmic',\r\n                    min: 0,\r\n                    // floor: 0,\r\n                    // ceiling: 100,\r\n                    // max: 100, // 0-100 ???\r\n                    title: {\r\n                        text: '',\r\n                        // text: 'Total fruit consumption'\r\n                    },\r\n                    labels: {\r\n                        // format: '{value}%',// 百分比\r\n                        style: {\r\n                            color: Highcharts.getOptions().colors[1]\r\n                        }\r\n                    }\r\n                    // stackLabels: {\r\n                    //     // enabled: true,// counter all cols values\r\n                    //     style: {\r\n                    //         fontWeight: 'bold',\r\n                    //         color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'\r\n                    //     }\r\n                    // }\r\n                },\r\n                // yAxis 1\r\n                {\r\n                    // x: -50,\r\n                    // y: -50,\r\n                    min: 0,\r\n                    // max: 100, // 0-100 ???\r\n                    // ceiling: 100,\r\n                    // step: 10,\r\n                    title: {\r\n                        text: '',\r\n                        // text: 'Total fruit consumption'\r\n                    },\r\n                    // labels: {\r\n                    //     format: '{value}',\r\n                    //     style: {\r\n                    //         color: Highcharts.getOptions().colors[1]\r\n                    //     }\r\n                    // },\r\n                    // stackLabels: {\r\n                    //     // enabled: true,\r\n                    //     style: {\r\n                    //         fontWeight: 'bold',\r\n                    //         color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'\r\n                    //     }\r\n                    // },\r\n                    opposite: true,\r\n                    gridLineColor: '#2D3039'\r\n                }\r\n            ],\r\n            legend: {\r\n                align: 'center',// left, center and right. (Defaults to center.)\r\n                backgroundColor: legend_bg_color, // black ???\r\n                // x: 0,\r\n                // y: 340,\r\n                // verticalAlign: 'top',\r\n                x: 0,\r\n                y: 0,\r\n                verticalAlign: \"bottom\",\r\n                // floating: true,\r\n                floating: false,\r\n                // backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',\r\n                // borderColor: '#CCC',\r\n                // borderWidth: 1,\r\n                shadow: false,\r\n                itemStyle: {\r\n                    color: legend_item_color,\r\n                    // fontWeight: 'bold'\r\n                },\r\n                itemHoverStyle: {\r\n                    color: legend_item_hover_color,\r\n                },\r\n            },\r\n            // tooltip ??? array\r\n            tooltip: {\r\n                shared: true,// share all datas in one tolltip!\r\n                headerFormat: `\r\n                    <strong>\r\n                        {point.x}\r\n                    </strong>\r\n                    <br/>\r\n                `,\r\n                pointFormat: `\r\n                    <span style=\"color:{point.color}\">\\u25CF</span>\r\n                    {series.name}: {point.y}<br/>\r\n                    <span style=\"color:{point.color}\">\\u25CF</span>\r\n                `,\r\n                // 百分比 :{point.percentage:.0f}%\r\n            },\r\n            // 情节/绘图选项\r\n            plotOptions: {\r\n                // (series) type = column (chart)\r\n                // column: {\r\n                //     // stacking: 'normal',// 是否将每个系列的值叠加在一起, 默认是：null\r\n                //     // stacking: 'null',\r\n                //     stacking: 'percent',// 百分比堆叠柱形图\r\n                //     dataLabels: {\r\n                //         // enabled: true,\r\n                //         color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'\r\n                //     }\r\n                // },\r\n                // spline: {\r\n                //     stacking: 'normal',\r\n                // }\r\n            },\r\n            series: [\r\n                {\r\n                    type: \"area\",//column\r\n                    yAxis: 0,\r\n                    // color: \"red\",//lawngreen\r\n                    name: \"成交额(亿元)\",\r\n                    data: turnover_amount,\r\n                    connectNulls: true,// OK\r\n                    tooltip: {\r\n                        headerFormat: `\r\n                            <strong>\r\n                                {point.x}\r\n                            </strong>\r\n                            <br/>\r\n                        `,\r\n                        pointFormat: `\r\n                            <span style=\"color:{point.color}\">\\u25CF</span>\r\n                            {series.name}: <b>{point.y}</b><br/>\r\n                        `,\r\n                        // <span style=\"color:{point.color}\">\\u25CF</span> 百分比 :{point.percentage:.0f}%\r\n                    },\r\n                },\r\n                {\r\n                    type: \"area\",//\"spline\"\r\n                    yAxis: 1,\r\n                    // color: \"grey\",\r\n                    color: \"#3f3\",\r\n                    name: \"成交量(亿股)\",\r\n                    data: turnover_number,\r\n                    connectNulls: true,// OK\r\n                    tooltip: {\r\n                        headerFormat: `\r\n                            <strong>\r\n                                {point.x}\r\n                            </strong>\r\n                            <br/>\r\n                        `,\r\n                        pointFormat: `\r\n                            <span style=\"color:{point.color}\">\\u25CF</span>\r\n                            {series.name}: <b>{point.y}</b><br/>\r\n                        `,\r\n                        // <span style=\"color:{point.color}\">\\u25CF</span> 百分比 :{point.percentage:.0f}%\r\n                    },\r\n                }\r\n            ],\r\n            // scrollbar: {\r\n            //     enabled: true\r\n            // }\r\n        });\r\n    }\r\n);\r\n\r\n\r\n\r\nOTC_TS_FV.Modules.turnoverTrendProtocolDiagram.drawHC = OTC_TS_FV.Modules.turnoverTrendProtocolDiagram.drawHC || (\r\n    (obj = {}, uid = ``, debug = false) => {\r\n        if (debug) {\r\n            console.log(`HC obj = \\n`, obj);\r\n            // console.log(`HC obj = \\n`, JSON.stringify(obj, null, 4));\r\n            console.log(`HC uid = \\n`, uid);\r\n            console.log(`HC debug = \\n`, debug);\r\n        }\r\n        const datas = obj;\r\n        let titles = {\r\n            title1: `title 1`,\r\n            title2: `title 2`\r\n        }\r\n        const chart_css = {\r\n            color: `#0B1016`,\r\n            colors: ['#ff1919', '#ffff66', '#92d050'],\r\n            optioncolor: `red`,\r\n            gridColor: `#2D3039`,\r\n            legendColor: `#fff`,\r\n            yAxisColor: `#FFB400`,\r\n        };\r\n        // css_obj ???\r\n        // babel & ES8 => ES5\r\n        // const {color, colors, optioncolor, gridColor, legendColor, yAxisColor} = {...chart_css};\r\n        let color = chart_css.color,\r\n            colors = chart_css.colors,\r\n            optioncolor = chart_css.optioncolor,\r\n            gridColor = chart_css.gridColor,\r\n            legendColor = chart_css.legendColor,\r\n            yAxisColor = chart_css.yAxisColor;\r\n        // babel & ES8 => ES5\r\n        // let {\r\n        //     turnover_time,\r\n        //     turnover_number,\r\n        //     turnover_amount\r\n        // } = {...datas};\r\n        let turnover_time = datas.turnover_time,\r\n            turnover_number = datas.turnover_number,\r\n            turnover_amount = datas.turnover_amount;\r\n        if (debug) {\r\n            console.log(`HC turnover_time = \\n`, turnover_time);\r\n            console.log(`HC turnover_number = \\n`, turnover_number);\r\n            console.log(`HC turnover_amount = \\n`, turnover_amount);\r\n        }\r\n        let skin_color = (OTC_SKIN === \"black\") ? `#0b1016` : `#fff`,\r\n            legend_item_color = (OTC_SKIN === \"black\") ? `#fff` : `#0b1016`,\r\n            legend_item_hover_color = (OTC_SKIN === \"black\") ? `#f79530` : `#000`,\r\n            legend_label_color = (OTC_SKIN === \"black\") ? `#fff` : `#000`,\r\n            title_color = (OTC_SKIN === \"black\") ? `#fff` : `#000`,\r\n            legend_bg_color = (OTC_SKIN === \"black\") ? `#0b1016` : `#fff`;\r\n        Highcharts.setOptions({\r\n            lang: {\r\n                rangeSelectorZoom: '缩放',// 放大\r\n                rangeSelectorFrom: '从',\r\n                rangeSelectorTo: '到',\r\n                contextButtonTitle: '图表导出菜单',\r\n                decimalPoint: '.',\r\n                downloadJPEG: \"下载JPEG图片\",\r\n                downloadPDF: \"下载PDF文件\",\r\n                downloadPNG: \"下载PNG文件\",\r\n                downloadSVG: \"下载SVG文件\",\r\n                drillUpText: \"返回 {series.name}\",\r\n                loading: '加载中...',\r\n                months: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\r\n                noData: `\r\n                    <p data-none=\"no-data-hc\">\r\n                        <span data-none=\"no-data-span\"></span>\r\n                    </p>\r\n                `,\r\n                // noData: \"没有数据显示!\",\r\n                numericSymbols: ['k', 'M', 'G', 'T', 'P', 'E'],\r\n                printChart: \"打印图表\",\r\n                resetZoom: '重置缩放比例',\r\n                resetZoomTitle: '重置为原始大小',\r\n                shortMonths: ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'],\r\n                thousandsSep: ',',\r\n                shortWeekdays: ['周天', '周一', '周二', '周三', '周四', '周五', '周六'],\r\n                weekdays: ['星期天','星期一', '星期二', '星期三', '星期四', '星期五', '星期六']\r\n            },\r\n        });\r\n        // Highcharts.chart\r\n        Highcharts.chart(uid, {\r\n            noData: {// all defualt value\r\n                // attr: undefined,\r\n                // position: {\r\n                //     align: `center`,\r\n                //     verticalAlign: `middle`,\r\n                //     x: 0,\r\n                //     y: 0,\r\n                // },\r\n                // style: {\r\n                //     color: `#666666`,\r\n                //     fontSize: `12px`,\r\n                //     fontWeight: `bold`\r\n                // },\r\n                useHTML: true,\r\n            },\r\n            // rangeSelector: {\r\n            //     selected: 4\r\n            // },\r\n            chart: {\r\n                type: \"column\",\r\n                // backgroundColor: chart_css.color\r\n                backgroundColor: skin_color,\r\n                // plotBorderWidth: 1,\r\n                // height: (9 / 16 * 100) + '%',\r\n                height: 272,// 275px;\r\n                // 16:9 ratio\r\n            },\r\n            title: {\r\n                text: \"协议\",\r\n                style: {\r\n                    \"color\": title_color,\r\n                    \"fontSize\": \"13px\",\r\n                    \"fontWeight\": \"bold\"\r\n                }\r\n            },\r\n            xAxis: {\r\n                // categories: ['2017-02', '2017-02', '2017-02', '2017-02', '2017-02'],\r\n                categories: turnover_time,\r\n                // min: 0,\r\n                // max: 8,\r\n                // max: turnover_max_time,\r\n                // xAxis datas\r\n                labels: {\r\n                    // autoRotation:'false',\r\n                    autoRotation: [0],\r\n                    step: 20\r\n                }\r\n            },\r\n            credits: {\r\n                // enabled: true,//\r\n                enabled: false,\r\n                href: `https://www.gildata.com`,\r\n                text: `gildata`,\r\n                // position: https://api.highcharts.com/highstock/credits.style,\r\n                // style: https://api.highcharts.com/highstock/credits.style\r\n            },\r\n            colors: ['#ff1919', '#33ff66', '#92d050'],\r\n            // colors: ['#ff1919', '#ffff66', '#92d050'],\r\n            // colors: [...colors],\r\n            yAxis: [\r\n                // yAxis 0\r\n                {\r\n                    // x: -50,\r\n                    // y: -50,\r\n                    // type: 'logarithmic',\r\n                    min: 0,\r\n                    // floor: 0,\r\n                    // ceiling: 100,\r\n                    // max: 100, // 0-100 ???\r\n                    title: {\r\n                        text: '',\r\n                        // text: 'Total fruit consumption'\r\n                    },\r\n                    labels: {\r\n                        // format: '{value}%',// 百分比\r\n                        style: {\r\n                            color: Highcharts.getOptions().colors[1]\r\n                        }\r\n                    }\r\n                    // stackLabels: {\r\n                    //     // enabled: true,// counter all cols values\r\n                    //     style: {\r\n                    //         fontWeight: 'bold',\r\n                    //         color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'\r\n                    //     }\r\n                    // }\r\n                },\r\n                // yAxis 1\r\n                {\r\n                    // x: -50,\r\n                    // y: -50,\r\n                    min: 0,\r\n                    // max: 100, // 0-100 ???\r\n                    // ceiling: 100,\r\n                    // step: 10,\r\n                    title: {\r\n                        text: '',\r\n                        // text: 'Total fruit consumption'\r\n                    },\r\n                    // labels: {\r\n                    //     format: '{value}',\r\n                    //     style: {\r\n                    //         color: Highcharts.getOptions().colors[1]\r\n                    //     }\r\n                    // },\r\n                    // stackLabels: {\r\n                    //     // enabled: true,\r\n                    //     style: {\r\n                    //         fontWeight: 'bold',\r\n                    //         color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'\r\n                    //     }\r\n                    // },\r\n                    opposite: true,\r\n                    gridLineColor: '#2D3039'\r\n                }\r\n            ],\r\n            legend: {\r\n                align: 'center',// left, center and right. (Defaults to center.)\r\n                backgroundColor: legend_bg_color,\r\n                // x: 0,\r\n                // y: 340,\r\n                // verticalAlign: 'top',\r\n                x: 0,\r\n                y: 0,\r\n                verticalAlign: \"bottom\",\r\n                // floating: true,\r\n                floating: false,\r\n                // backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',\r\n                // borderColor: '#CCC',\r\n                // borderWidth: 1,\r\n                shadow: false,\r\n                itemStyle: {\r\n                    color: legend_item_color,\r\n                    // fontWeight: 'bold'\r\n                },\r\n                itemHoverStyle: {\r\n                    color: legend_item_hover_color,\r\n                },\r\n            },\r\n            // tooltip ??? array\r\n            tooltip: {\r\n                shared: true,// share all datas in one tolltip!\r\n                headerFormat: `\r\n                    <strong>\r\n                        {point.x}\r\n                    </strong>\r\n                    <br/>\r\n                `,\r\n                pointFormat: `\r\n                    <span style=\"color:{point.color}\">\\u25CF</span>\r\n                    {series.name}: {point.y}<br/>\r\n                    <span style=\"color:{point.color}\">\\u25CF</span>\r\n                `,\r\n                // 百分比 :{point.percentage:.0f}%\r\n            },\r\n            // 情节/绘图选项\r\n            plotOptions: {\r\n                // (series) type = column (chart)\r\n                // column: {\r\n                //     // stacking: 'normal',// 是否将每个系列的值叠加在一起, 默认是：null\r\n                //     // stacking: 'null',\r\n                //     stacking: 'percent',// 百分比堆叠柱形图\r\n                //     dataLabels: {\r\n                //         // enabled: true,\r\n                //         color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white'\r\n                //     }\r\n                // },\r\n                // spline: {\r\n                //     stacking: 'normal',\r\n                // }\r\n            },\r\n            series: [\r\n                {\r\n                    type: \"area\",//line/spline\r\n                    yAxis: 0,\r\n                    // color: \"red\",//lawngreen\r\n                    name: \"成交额(亿元)\",\r\n                    data: turnover_amount,\r\n                    connectNulls: true,// OK\r\n                    tooltip: {\r\n                        headerFormat: `\r\n                            <strong>\r\n                                {point.x}\r\n                            </strong>\r\n                            <br/>\r\n                        `,\r\n                        pointFormat: `\r\n                            <span style=\"color:{point.color}\">\\u25CF</span>\r\n                            {series.name}: <b>{point.y}</b><br/>\r\n                        `,\r\n                        // <span style=\"color:{point.color}\">\\u25CF</span> 百分比 :{point.percentage:.0f}%\r\n                    },\r\n                },\r\n                {\r\n                    type: \"area\",\r\n                    yAxis: 1,\r\n                    // color: \"grey\",//skyblue\r\n                    // color: \"#3f3\",\r\n                    color: \"rgb(25, 255, 25)\",\r\n                    // color: \"rgba(25, 255, 25, 0.5)\",\r\n                    name: \"成交量(亿股)\",\r\n                    data: turnover_number,\r\n                    connectNulls: true,// OK\r\n                    tooltip: {\r\n                        headerFormat: `\r\n                            <strong>\r\n                                {point.x}\r\n                            </strong>\r\n                            <br/>\r\n                        `,\r\n                        pointFormat: `\r\n                            <span style=\"color:{point.color}\">\\u25CF</span>\r\n                            {series.name}: <b>{point.y}</b><br/>\r\n                        `,\r\n                        // <span style=\"color:{point.color}\">\\u25CF</span> 百分比 :{point.percentage:.0f}%\r\n                    },\r\n                }\r\n            ],\r\n            // scrollbar: {\r\n            //     enabled: true\r\n            // }\r\n        });\r\n    }\r\n);\r\n\r\n\r\n\r\n// init\r\nOTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram.init = OTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram.init || (\r\n    (\r\n        {\r\n            ip,\r\n            path,\r\n            socket,\r\n            skin,\r\n            // gilcode\r\n        } = {\r\n            ip: `http://10.1.5.202`,\r\n            path: `/webservice/fastview/otc`,\r\n            socket: `/otcfast10`,\r\n            skin: `black`,\r\n            // gilcode: `430002.OC`\r\n        }\r\n    ) => {\r\n        let url = `${ip}${path}${socket}`,\r\n        // let url = `http://10.1.5.202/webservice/fastview/otc/otcfast10`,\r\n            uid = `turnover_trend_make_market_diagram_hs_container`;\r\n        // HC, no need #\r\n        OTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram(url, uid, false);\r\n    }\r\n);\r\n\r\nOTC_TS_FV.Modules.turnoverTrendProtocolDiagram.init = OTC_TS_FV.Modules.turnoverTrendProtocolDiagram.init || (\r\n    (\r\n        {\r\n            ip,\r\n            path,\r\n            socket,\r\n            skin,\r\n            // gilcode\r\n        } = {\r\n            ip: `http://10.1.5.202`,\r\n            path: `/webservice/fastview/otc`,\r\n            socket: `/otcfast11`,\r\n            skin: `black`,\r\n            // gilcode: `430002.OC`\r\n        }\r\n    ) => {\r\n        let url = `${ip}${path}${socket}`,\r\n        // let url = `http://10.1.5.202/webservice/fastview/otc/otcfast11`,\r\n            uid = `turnover_trend_protocol_diagram_hs_container`;\r\n        OTC_TS_FV.Modules.turnoverTrendProtocolDiagram(url, uid, false);\r\n    }\r\n);\r\n\r\n// OTC_SKIN ???\r\n\r\nvar OTC_IP = window.OTC_IP || `http://10.1.5.202`,\r\n    OTC_PATH = window.OTC_PATH || `/webservice/fastview/otc`,\r\n    OTC_SKIN = window.OTC_SKIN || `black`;\r\n    // OTC_GILCODE = window.OTC_GILCODE || `430002.OC`;\r\n\r\nOTC_TS_FV.Modules.turnoverTrendMakeMarketDiagram.init({\r\n    ip: OTC_IP,\r\n    path: OTC_PATH,\r\n    socket: `/otcfast10`,\r\n    skin: OTC_SKIN,\r\n    // gilcode: OTC_GILCODE\r\n});\r\n\r\nOTC_TS_FV.Modules.turnoverTrendProtocolDiagram.init({\r\n    ip: OTC_IP,\r\n    path: OTC_PATH,\r\n    socket: `/otcfast11`,\r\n    skin: OTC_SKIN,\r\n    // gilcode: OTC_GILCODE\r\n});\r\n\r\n\r\n// HC & no scrollbar & one year data\r\n// http://10.1.5.202/otc/f9/index.html?gilcode=430009.OC&skin=white#1\r\n\n\n\n// WEBPACK FOOTER //\n// ./modules/turnover-trend-diagram.js"],"sourceRoot":""}